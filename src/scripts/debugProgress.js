// Script pentru debugging progresul cursurilor
import { getCourseProgress, markLessonComplete } from '../firebase/firestore';

export const debugCourseProgress = async (userId, courseId) => {
  console.log('üîç DEBUG: Verific progresul pentru utilizatorul:', userId, 'cursul:', courseId);
  
  try {
    const progress = await getCourseProgress(userId, courseId);
    console.log('üìä Progres gƒÉsit:', progress);
    
    if (progress) {
      console.log('‚úÖ Lec»õii completate:', progress.completedLessons);
      console.log('üìà Progres procentual:', progress.progress + '%');
      console.log('‚è±Ô∏è Timp petrecut:', progress.timeSpent + 'h');
      console.log('üìÖ Ultima accesare:', progress.lastAccessed);
    } else {
      console.log('‚ùå Nu existƒÉ progres pentru acest curs');
    }
    
    return progress;
  } catch (error) {
    console.error('‚ùå Eroare la debugging progres:', error);
    return null;
  }
};

export const testMarkLesson = async (userId, courseId, courseTitle, lessonIndex, totalLessons) => {
  console.log('üß™ TEST: Marchez lec»õia', lessonIndex, 'ca completatƒÉ');
  
  try {
    const success = await markLessonComplete(userId, courseId, courseTitle, lessonIndex, totalLessons);
    console.log('‚úÖ Rezultat marcare lec»õie:', success);
    
    // Verific progresul dupƒÉ marcare
    const progress = await getCourseProgress(userId, courseId);
    console.log('üìä Progres dupƒÉ marcare:', progress);
    
    return success;
  } catch (error) {
    console.error('‚ùå Eroare la testarea marcare lec»õie:', error);
    return false;
  }
};

// Func»õie pentru a afi»ôa toate progresele unui utilizator
export const debugAllProgress = async (userId) => {
  console.log('üîç DEBUG: Verific toate progresele pentru utilizatorul:', userId);
  
  try {
    const { collection, getDocs, query, where } = window.firestoreFunctions;
    const db = window.firebaseDB;
    
    const progressRef = collection(db, 'courseProgress');
    const progressQuery = query(progressRef, where('userId', '==', userId));
    const progressSnapshot = await getDocs(progressQuery);
    
    console.log('üìä Total progrese gƒÉsite:', progressSnapshot.size);
    
    progressSnapshot.docs.forEach(doc => {
      const data = doc.data();
      console.log('üìö Curs:', data.courseTitle, '| Progres:', data.progress + '%', '| Lec»õii completate:', data.completedLessons);
    });
    
    return progressSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
  } catch (error) {
    console.error('‚ùå Eroare la debugging toate progresele:', error);
    return [];
  }
};
